plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'goodpartner'
version = '0.0.1-SNAPSHOT'

bootJar.enabled = false // 빌드시 현재 모듈(multi-module)의 .jar를 생성하지 않습니다.
//
//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(17)
//	}
//}
//,
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}

repositories {
	mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
	group 'com.example'
	version '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {

		// Spring
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// Security
		testImplementation 'org.springframework.security:spring-security-test'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// DB
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		runtimeOnly 'com.mysql:mysql-connector-j'

		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Test
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		// Swagger
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

		// JWT
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
		implementation 'com.auth0:java-jwt:4.2.1'
	}

	test {
		useJUnitPlatform()
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
